[{"C:\\Users\\Abdelrahman\\Desktop\\twitter react\\frontend\\src\\index.js":"1","C:\\Users\\Abdelrahman\\Desktop\\twitter react\\frontend\\src\\App.js":"2","C:\\Users\\Abdelrahman\\Desktop\\twitter react\\frontend\\src\\redux\\store.js":"3","C:\\Users\\Abdelrahman\\Desktop\\twitter react\\frontend\\src\\screens\\LoginScreen.js":"4","C:\\Users\\Abdelrahman\\Desktop\\twitter react\\frontend\\src\\screens\\SignupScreen.js":"5","C:\\Users\\Abdelrahman\\Desktop\\twitter react\\frontend\\src\\screens\\HomeScreen.js":"6","C:\\Users\\Abdelrahman\\Desktop\\twitter react\\frontend\\src\\redux\\reducers\\userReducer.js":"7","C:\\Users\\Abdelrahman\\Desktop\\twitter react\\frontend\\src\\components\\Message.js":"8","C:\\Users\\Abdelrahman\\Desktop\\twitter react\\frontend\\src\\redux\\actions\\userActions.js":"9","C:\\Users\\Abdelrahman\\Desktop\\twitter react\\frontend\\src\\redux\\types.js":"10","C:\\Users\\Abdelrahman\\Desktop\\twitter react\\frontend\\src\\components\\Sidebar.js":"11","C:\\Users\\Abdelrahman\\Desktop\\twitter react\\frontend\\src\\components\\MainLayout.js":"12","C:\\Users\\Abdelrahman\\Desktop\\twitter react\\frontend\\src\\components\\PostForm.js":"13","C:\\Users\\Abdelrahman\\Desktop\\twitter react\\frontend\\src\\redux\\reducers\\postReducers.js":"14","C:\\Users\\Abdelrahman\\Desktop\\twitter react\\frontend\\src\\redux\\actions\\postActions.js":"15","C:\\Users\\Abdelrahman\\Desktop\\twitter react\\frontend\\src\\components\\Post.js":"16","C:\\Users\\Abdelrahman\\Desktop\\twitter react\\frontend\\src\\utils\\timeDifference.js":"17","C:\\Users\\Abdelrahman\\Desktop\\twitter react\\frontend\\src\\components\\Modal.js":"18","C:\\Users\\Abdelrahman\\Desktop\\twitter react\\frontend\\src\\components\\Form.js":"19","C:\\Users\\Abdelrahman\\Desktop\\twitter react\\frontend\\src\\screens\\PostScreen.js":"20","C:\\Users\\Abdelrahman\\Desktop\\twitter react\\frontend\\src\\routes\\authRoutes.js":"21","C:\\Users\\Abdelrahman\\Desktop\\twitter react\\frontend\\src\\screens\\ProfileScreen.js":"22","C:\\Users\\Abdelrahman\\Desktop\\twitter react\\frontend\\src\\redux\\reducers\\profileReducers.js":"23","C:\\Users\\Abdelrahman\\Desktop\\twitter react\\frontend\\src\\redux\\actions\\profileActions.js":"24","C:\\Users\\Abdelrahman\\Desktop\\twitter react\\frontend\\src\\components\\Loader.js":"25","C:\\Users\\Abdelrahman\\Desktop\\twitter react\\frontend\\src\\components\\Tabs.js":"26","C:\\Users\\Abdelrahman\\Desktop\\twitter react\\frontend\\src\\components\\FollowButton.js":"27","C:\\Users\\Abdelrahman\\Desktop\\twitter react\\frontend\\src\\screens\\FollowingScreen.js":"28","C:\\Users\\Abdelrahman\\Desktop\\twitter react\\frontend\\src\\components\\User.js":"29","C:\\Users\\Abdelrahman\\Desktop\\twitter react\\frontend\\src\\components\\ImageUploadModal.js":"30","C:\\Users\\Abdelrahman\\Desktop\\twitter react\\frontend\\src\\screens\\SearchScreen.js":"31","C:\\Users\\Abdelrahman\\Desktop\\twitter react\\frontend\\src\\screens\\InboxScreen.js":"32","C:\\Users\\Abdelrahman\\Desktop\\twitter react\\frontend\\src\\screens\\MessageScreen.js":"33","C:\\Users\\Abdelrahman\\Desktop\\twitter react\\frontend\\src\\redux\\actions\\chatActions.js":"34","C:\\Users\\Abdelrahman\\Desktop\\twitter react\\frontend\\src\\redux\\reducers\\chatReducer.js":"35","C:\\Users\\Abdelrahman\\Desktop\\twitter react\\frontend\\src\\components\\Chat.js":"36","C:\\Users\\Abdelrahman\\Desktop\\twitter react\\frontend\\src\\screens\\ChatScreen.js":"37","C:\\Users\\Abdelrahman\\Desktop\\twitter react\\frontend\\src\\utils\\getChatName.js":"38","C:\\Users\\Abdelrahman\\Desktop\\twitter react\\frontend\\src\\redux\\actions\\messagesActions.js":"39","C:\\Users\\Abdelrahman\\Desktop\\twitter react\\frontend\\src\\redux\\reducers\\messagesReducer.js":"40","C:\\Users\\Abdelrahman\\Desktop\\twitter react\\frontend\\src\\components\\Messages.js":"41","C:\\Users\\Abdelrahman\\Desktop\\twitter react\\frontend\\src\\components\\TextInput.js":"42"},{"size":317,"mtime":1611422911840,"results":"43","hashOfConfig":"44"},{"size":3029,"mtime":1615626460673,"results":"45","hashOfConfig":"44"},{"size":1231,"mtime":1615214462729,"results":"46","hashOfConfig":"44"},{"size":1937,"mtime":1613206985015,"results":"47","hashOfConfig":"44"},{"size":3521,"mtime":1613214142312,"results":"48","hashOfConfig":"44"},{"size":741,"mtime":1613206951057,"results":"49","hashOfConfig":"44"},{"size":2341,"mtime":1614666175859,"results":"50","hashOfConfig":"44"},{"size":200,"mtime":1611422911955,"results":"51","hashOfConfig":"44"},{"size":2943,"mtime":1614426460972,"results":"52","hashOfConfig":"44"},{"size":4395,"mtime":1615229744643,"results":"53","hashOfConfig":"44"},{"size":1012,"mtime":1613934100020,"results":"54","hashOfConfig":"44"},{"size":777,"mtime":1613762405293,"results":"55","hashOfConfig":"44"},{"size":810,"mtime":1613210830189,"results":"56","hashOfConfig":"44"},{"size":4256,"mtime":1614437042930,"results":"57","hashOfConfig":"44"},{"size":7778,"mtime":1614410250050,"results":"58","hashOfConfig":"44"},{"size":4153,"mtime":1614325063510,"results":"59","hashOfConfig":"44"},{"size":883,"mtime":1611994400599,"results":"60","hashOfConfig":"44"},{"size":4576,"mtime":1615126852720,"results":"61","hashOfConfig":"44"},{"size":1005,"mtime":1612607248879,"results":"62","hashOfConfig":"44"},{"size":1691,"mtime":1613932684387,"results":"63","hashOfConfig":"44"},{"size":690,"mtime":1613213000843,"results":"64","hashOfConfig":"44"},{"size":4618,"mtime":1614437225941,"results":"65","hashOfConfig":"44"},{"size":1664,"mtime":1613806957183,"results":"66","hashOfConfig":"44"},{"size":2020,"mtime":1613809651860,"results":"67","hashOfConfig":"44"},{"size":238,"mtime":1613292747026,"results":"68","hashOfConfig":"44"},{"size":3904,"mtime":1614604364624,"results":"69","hashOfConfig":"44"},{"size":443,"mtime":1613634136257,"results":"70","hashOfConfig":"44"},{"size":1354,"mtime":1613808773444,"results":"71","hashOfConfig":"44"},{"size":1278,"mtime":1614613760590,"results":"72","hashOfConfig":"44"},{"size":3664,"mtime":1614191491302,"results":"73","hashOfConfig":"44"},{"size":2487,"mtime":1614429855677,"results":"74","hashOfConfig":"44"},{"size":1607,"mtime":1615125320421,"results":"75","hashOfConfig":"44"},{"size":4034,"mtime":1615056127435,"results":"76","hashOfConfig":"44"},{"size":2725,"mtime":1615126635114,"results":"77","hashOfConfig":"44"},{"size":1980,"mtime":1615126776379,"results":"78","hashOfConfig":"44"},{"size":1450,"mtime":1615432596826,"results":"79","hashOfConfig":"44"},{"size":4668,"mtime":1615492771974,"results":"80","hashOfConfig":"44"},{"size":230,"mtime":1615014379716,"results":"81","hashOfConfig":"44"},{"size":1461,"mtime":1615482298023,"results":"82","hashOfConfig":"44"},{"size":1143,"mtime":1615229774273,"results":"83","hashOfConfig":"44"},{"size":1028,"mtime":1615405630833,"results":"84","hashOfConfig":"44"},{"size":536,"mtime":1615490691698,"results":"85","hashOfConfig":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},"1ax6u3",{"filePath":"89","messages":"90","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"88"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"88"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"88"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"88"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"88"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"88"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"88"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"88"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"88"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"88"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"88"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"88"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"88"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"88"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"88"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"88"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"88"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"88"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"88"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"88"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"88"},"C:\\Users\\Abdelrahman\\Desktop\\twitter react\\frontend\\src\\index.js",[],["192","193"],"C:\\Users\\Abdelrahman\\Desktop\\twitter react\\frontend\\src\\App.js",["194"],"C:\\Users\\Abdelrahman\\Desktop\\twitter react\\frontend\\src\\redux\\store.js",[],"C:\\Users\\Abdelrahman\\Desktop\\twitter react\\frontend\\src\\screens\\LoginScreen.js",["195","196"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { login } from \"../redux/actions/userActions\";\r\nimport Message from \"../components/Message\";\r\nconst LoginScreen = ({ history, location }) => {\r\n  const [stylePath, setStylePath] = useState(\"LoginScreen.css\");\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const [logUserName, setLogUserName] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const handleLoginSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(login({ logUserName, password }));\r\n  };\r\n\r\n  const { userInfo, loading, errors } = useSelector((state) => state.userLogin);\r\n  // Adding background color for this screen only\r\n  useEffect(() => {\r\n    let head = document.head;\r\n    let link = document.createElement(\"link\");\r\n\r\n    link.type = \"text/css\";\r\n    link.rel = \"stylesheet\";\r\n    link.href = stylePath;\r\n\r\n    head.appendChild(link);\r\n\r\n    return () => head.removeChild(link);\r\n  }, [stylePath]);\r\n\r\n  return (\r\n    <div className=\"loginContainer\">\r\n      {loading && <h1>Loading...</h1>}\r\n      {errors && <Message variant=\"danger\">{errors}</Message>}\r\n      <h1>Login</h1>\r\n      <form method=\"post\" onSubmit={handleLoginSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Enter email or username\"\r\n          name=\"loginUser\"\r\n          value={logUserName}\r\n          onChange={(e) => setLogUserName(e.target.value)}\r\n          required\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Enter your password\"\r\n          name=\"password\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          required\r\n        />\r\n        <input type=\"submit\" value=\"Login\" />\r\n      </form>\r\n      <Link to=\"/register\">Need an account? Sign up here</Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginScreen;\r\n","C:\\Users\\Abdelrahman\\Desktop\\twitter react\\frontend\\src\\screens\\SignupScreen.js",["197"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Message from \"../components/Message\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { register } from \"../redux/actions/userActions\";\r\nconst SignupScreen = ({ history, location }) => {\r\n  const dispatch = useDispatch();\r\n  const [firstName, setFirstName] = useState(\"\");\r\n  const [lastName, setLastName] = useState(\"\");\r\n  const [username, setUsername] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [passwordConfirm, setPasswordConfirm] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n  const [stylePath, setStylePath] = useState(\"LoginScreen.css\");\r\n\r\n  const userSelector = useSelector((state) => state.userRegister);\r\n  let { userInfo, loading, errors } = userSelector;\r\n\r\n  const handleSubmit = (e) => {\r\n    setMessage(\"\");\r\n    e.preventDefault();\r\n    if (password !== passwordConfirm) {\r\n      setMessage(\"Passwords should match\");\r\n    } else {\r\n      dispatch(register({ firstName, lastName, username, email, password }));\r\n    }\r\n  };\r\n  // Adding background color for this screen only\r\n  useEffect(() => {\r\n    let head = document.head;\r\n    let link = document.createElement(\"link\");\r\n\r\n    link.type = \"text/css\";\r\n    link.rel = \"stylesheet\";\r\n    link.href = stylePath;\r\n\r\n    head.appendChild(link);\r\n\r\n    return () => head.removeChild(link);\r\n  }, [stylePath]);\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push(\"/\");\r\n    }\r\n  }, [history, userInfo]);\r\n\r\n  return (\r\n    <div className=\"loginContainer\">\r\n      <h1>Signup</h1>\r\n      {message && <Message variant=\"danger\">{message}</Message>}\r\n      {loading && <h1>Loading...</h1>}\r\n      {errors && <Message variant=\"danger\">{errors}</Message>}\r\n      <form>\r\n        <input\r\n          type=\"text\"\r\n          value={firstName}\r\n          onChange={(e) => setFirstName(e.target.value)}\r\n          placeholder=\"First name\"\r\n          name=\"firstName\"\r\n          required\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          value={lastName}\r\n          onChange={(e) => setLastName(e.target.value)}\r\n          placeholder=\"Last name\"\r\n          name=\"lastName\"\r\n          required\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          value={username}\r\n          onChange={(e) => setUsername(e.target.value)}\r\n          placeholder=\"Username\"\r\n          name=\"userName\"\r\n          required\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n          placeholder=\"Email address\"\r\n          name=\"email\"\r\n          required\r\n        />\r\n        <input\r\n          className=\"password\"\r\n          type=\"password\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          placeholder=\"Enter your password\"\r\n          name=\"password\"\r\n          minLength=\"8\"\r\n          required\r\n        />\r\n        <input\r\n          className=\"password\"\r\n          type=\"password\"\r\n          value={passwordConfirm}\r\n          onChange={(e) => setPasswordConfirm(e.target.value)}\r\n          placeholder=\"Confirm password\"\r\n          name=\"passwordConfirm\"\r\n          minLength=\"8\"\r\n          required\r\n        />\r\n        <input type=\"submit\" value=\"Register\" onClick={handleSubmit} />\r\n      </form>\r\n      <Link to=\"/login\">Already a user? Login here</Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignupScreen;\r\n","C:\\Users\\Abdelrahman\\Desktop\\twitter react\\frontend\\src\\screens\\HomeScreen.js",["198","199"],"import React, { useEffect } from \"react\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\nimport MainLayout from \"../components/MainLayout\";\r\nimport Sidebar from \"../components/Sidebar\";\r\nimport { useSelector } from \"react-redux\";\r\nimport \"./HomeScreen.css\";\r\nconst HomeScreen = ({ history }) => {\r\n  return (\r\n    <>\r\n      <div className=\"wrapper\">\r\n        <Row>\r\n          <Col xs={2}>\r\n            <nav>\r\n              <Sidebar />\r\n            </nav>\r\n          </Col>\r\n          <Col xs={10} md={8} lg={6} className=\"mainSectionContainer\">\r\n            <MainLayout />\r\n          </Col>\r\n          <Col className=\"d-none d-md-block col-md-2 col-lg-4\"></Col>\r\n        </Row>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HomeScreen;\r\n","C:\\Users\\Abdelrahman\\Desktop\\twitter react\\frontend\\src\\redux\\reducers\\userReducer.js",[],"C:\\Users\\Abdelrahman\\Desktop\\twitter react\\frontend\\src\\components\\Message.js",[],"C:\\Users\\Abdelrahman\\Desktop\\twitter react\\frontend\\src\\redux\\actions\\userActions.js",["200","201"],"import axios from \"axios\";\r\nimport { json } from \"body-parser\";\r\n\r\nimport {\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_REGISTER_FAIL,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_LOGOUT,\r\n  FOLLOW_USER_FAIL,\r\n  FOLLOW_USER_SUCCESS,\r\n  GET_SEARCH_USERS_SUCCESS,\r\n  GET_SEARCH_USERS_FAIL,\r\n} from \"../types\";\r\n\r\nexport const getUsers = (searchTerm) => async (dispatch, getState) => {\r\n  try {\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n      params: {\r\n        search: searchTerm,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(\"/api/users\", config);\r\n    dispatch({ type: GET_SEARCH_USERS_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: GET_SEARCH_USERS_FAIL,\r\n      payload: error.response.data.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const register = (user) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: USER_REGISTER_REQUEST });\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post(\"/register\", user, config);\r\n    dispatch({ type: USER_REGISTER_SUCCESS, payload: data });\r\n\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_REGISTER_FAIL,\r\n      payload: error.response.data.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const login = (user) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: USER_LOGIN_REQUEST });\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post(\"/login\", user, config);\r\n    dispatch({ type: USER_LOGIN_SUCCESS, payload: data });\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_LOGIN_FAIL,\r\n      payload: error.response.data.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const toggleUserFollow = (id) => async (dispatch, getState) => {\r\n  try {\r\n    const {\r\n      userLogin: { userInfo },\r\n      profile: { profile },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.put(`/api/users/${id}/follow`, {}, config);\r\n\r\n    // Updating the user from localstorage\r\n    const userInfoFromLocal = JSON.parse(localStorage.getItem(\"userInfo\"));\r\n    userInfoFromLocal.user = data;\r\n    dispatch({ type: FOLLOW_USER_SUCCESS, payload: data });\r\n\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(userInfoFromLocal));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: FOLLOW_USER_FAIL,\r\n      payload: error.response.data.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const logout = () => (dispatch) => {\r\n  localStorage.removeItem(\"userInfo\");\r\n\r\n  dispatch({ type: USER_LOGOUT });\r\n};\r\n","C:\\Users\\Abdelrahman\\Desktop\\twitter react\\frontend\\src\\redux\\types.js",[],"C:\\Users\\Abdelrahman\\Desktop\\twitter react\\frontend\\src\\components\\Sidebar.js",["202"],"import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Sidebar.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { logout } from \"../redux/actions/userActions\";\r\nimport {\r\n  FaDove,\r\n  FaHome,\r\n  FaSearch,\r\n  FaBell,\r\n  FaEnvelope,\r\n  FaUser,\r\n  FaSignOutAlt,\r\n} from \"react-icons/fa\";\r\n\r\nconst Sidebar = () => {\r\n  const dispatch = useDispatch();\r\n  const handleLogout = () => {\r\n    dispatch(logout());\r\n  };\r\n  return (\r\n    <>\r\n      <Link to=\"/\">\r\n        <FaDove className=\"blue\" />\r\n      </Link>\r\n      <Link to=\"/\">\r\n        <FaHome />\r\n      </Link>\r\n      <Link to=\"/search\">\r\n        <FaSearch />\r\n      </Link>\r\n      <Link to=\"/notifications\">\r\n        <FaBell />\r\n      </Link>\r\n      <Link to=\"/messages\">\r\n        <FaEnvelope />\r\n      </Link>\r\n      <Link to={`/profile`}>\r\n        <FaUser />\r\n      </Link>\r\n      <div className=\"link\" onClick={handleLogout}>\r\n        <FaSignOutAlt />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","C:\\Users\\Abdelrahman\\Desktop\\twitter react\\frontend\\src\\components\\MainLayout.js",[],"C:\\Users\\Abdelrahman\\Desktop\\twitter react\\frontend\\src\\components\\PostForm.js",[],"C:\\Users\\Abdelrahman\\Desktop\\twitter react\\frontend\\src\\redux\\reducers\\postReducers.js",[],"C:\\Users\\Abdelrahman\\Desktop\\twitter react\\frontend\\src\\redux\\actions\\postActions.js",[],"C:\\Users\\Abdelrahman\\Desktop\\twitter react\\frontend\\src\\components\\Post.js",["203"],"import React, { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { AiOutlineHeart } from \"react-icons/ai\";\r\nimport { FaRetweet } from \"react-icons/fa\";\r\nimport { timeDifference } from \"../utils/timeDifference\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { RiPushpin2Fill } from \"react-icons/ri\";\r\n\r\nimport {\r\n  togglePostLike,\r\n  togglePostRetweet,\r\n} from \"../redux/actions/postActions\";\r\nimport Modal from \"./Modal\";\r\nimport \"./MainLayout.css\";\r\n\r\nconst Post = ({ post, main, pinned }) => {\r\n  const dispatch = useDispatch();\r\n  const { userInfo } = useSelector((state) => state.userLogin);\r\n  const postTime = timeDifference(new Date(), new Date(post.createdAt));\r\n  const userId = userInfo.user._id;\r\n  const retweetedBy = post.retweetData ? post.postedBy.username : null;\r\n  const isRetweet = post.retweetData;\r\n  const isReply =\r\n    post.replyTo && post.replyTo._id ? post.replyTo.postedBy.username : null;\r\n  const mainText = main ? \"big\" : \"\";\r\n  const { profilePic, firstName, lastName, username, _id } = post.postedBy;\r\n  const displayName = `${firstName} ${lastName}`;\r\n  const retweetButtonClass =\r\n    (isRetweet && post.retweetData.retweetUsers.includes(userId)) ||\r\n    post.retweetUsers.includes(userId)\r\n      ? \"green\"\r\n      : \"\";\r\n  const handleRetweet = (e) => {\r\n    e.preventDefault();\r\n    dispatch(togglePostRetweet(post._id));\r\n  };\r\n\r\n  const likeHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(togglePostLike(post._id));\r\n  };\r\n\r\n  return (\r\n    <Link to={`/posts/${post._id}`} className=\"post\">\r\n      <div className=\"postActionContainer\">\r\n        {retweetedBy && (\r\n          <span>\r\n            <FaRetweet /> Retweeted By\r\n            <Link to={`/profile/${retweetedBy}`}> @{retweetedBy}</Link>\r\n          </span>\r\n        )}\r\n        {isReply && (\r\n          <span>\r\n            Replying To\r\n            <Link to={`/profile/${isReply}`}> @{isReply}</Link>\r\n          </span>\r\n        )}\r\n        {pinned && (\r\n          <span>\r\n            <RiPushpin2Fill /> Pinned Post\r\n          </span>\r\n        )}\r\n      </div>\r\n      <div className=\"mainPostContainer\">\r\n        <div className=\"userImageContainer\">\r\n          <img src={profilePic} alt=\"User Profile\" />\r\n        </div>\r\n        <div className=\"postContentContainer\">\r\n          <div className=\"header\">\r\n            <Link to={`/profile/${username}`} className=\"displayname\">\r\n              {displayName}\r\n            </Link>\r\n            <span className=\"username\">@{username}</span>\r\n            <span className=\"date\">{postTime}</span>\r\n            {_id === userId ? (\r\n              <>\r\n                <span onClick={(e) => e.preventDefault()}>\r\n                  <Modal post={post} pin />\r\n                </span>\r\n                <span onClick={(e) => e.preventDefault()}>\r\n                  <Modal post={post} times />\r\n                </span>\r\n              </>\r\n            ) : null}\r\n          </div>\r\n          <div className=\"body\">\r\n            <span className={mainText}>\r\n              {post.retweetData ? post.retweetData.content : post.content}\r\n            </span>\r\n          </div>\r\n          <div className=\"footer\">\r\n            <div\r\n              className=\"postButtonContainer\"\r\n              onClick={(e) => e.preventDefault()}\r\n            >\r\n              <Modal post={post} />\r\n            </div>\r\n            <div className=\"postButtonContainer\" onClick={handleRetweet}>\r\n              <button className={retweetButtonClass}>\r\n                <FaRetweet />\r\n                <span>\r\n                  {isRetweet\r\n                    ? isRetweet.retweetUsers.length\r\n                    : post.retweetUsers.length || \"\"}\r\n                </span>\r\n              </button>\r\n            </div>\r\n            <div className=\"postButtonContainer\" onClick={likeHandler}>\r\n              <button className={post.likes.includes(userId) ? \"red\" : \"\"}>\r\n                <AiOutlineHeart />\r\n\r\n                <span>{post.likes.length || \"\"}</span>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","C:\\Users\\Abdelrahman\\Desktop\\twitter react\\frontend\\src\\utils\\timeDifference.js",[],"C:\\Users\\Abdelrahman\\Desktop\\twitter react\\frontend\\src\\components\\Modal.js",[],"C:\\Users\\Abdelrahman\\Desktop\\twitter react\\frontend\\src\\components\\Form.js",[],"C:\\Users\\Abdelrahman\\Desktop\\twitter react\\frontend\\src\\screens\\PostScreen.js",["204","205"],"import React, { useEffect, useState } from \"react\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\nimport Sidebar from \"../components/Sidebar\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { getPost } from \"../redux/actions/postActions\";\r\nimport Post from \"../components/Post\";\r\nimport Loader from \"../components/Loader\";\r\nimport { GET_POST_RESET } from \"../redux/types\";\r\nconst PostScreen = ({ match }) => {\r\n  const postId = match.params.id;\r\n  const dispatch = useDispatch();\r\n  const { userInfo } = useSelector((state) => state.userLogin);\r\n  const { post, loading, replies, replyTo } = useSelector(\r\n    (state) => state.post\r\n  );\r\n\r\n  useEffect(() => {\r\n    dispatch(getPost(postId));\r\n\r\n    dispatch({ type: GET_POST_RESET });\r\n  }, [dispatch, postId]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"wrapper\">\r\n        <Row>\r\n          <Col xs={2}>\r\n            <nav>\r\n              <Sidebar />\r\n            </nav>\r\n          </Col>\r\n          <Col xs={10} md={8} lg={6} className=\"mainSectionContainer\">\r\n            <div className=\"titleContainer\">\r\n              <h1>View post</h1>\r\n            </div>\r\n            {loading || !post ? (\r\n              <Loader />\r\n            ) : (\r\n              <div className=\"content\">\r\n                {replyTo && <Post post={replyTo} />}\r\n                {<Post post={post} main />}\r\n                {replies.length !== 0 &&\r\n                  replies.map((reply) => <Post key={reply._id} post={reply} />)}\r\n              </div>\r\n            )}\r\n          </Col>\r\n          <Col className=\"d-none d-md-block col-md-2 col-lg-4\"></Col>\r\n        </Row>\r\n      </div>\r\n      )\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PostScreen;\r\n","C:\\Users\\Abdelrahman\\Desktop\\twitter react\\frontend\\src\\routes\\authRoutes.js",[],"C:\\Users\\Abdelrahman\\Desktop\\twitter react\\frontend\\src\\screens\\ProfileScreen.js",["206","207","208","209","210"],"import React, { useEffect } from \"react\";\r\nimport { Col, Row } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FaEnvelope } from \"react-icons/fa\";\r\nimport Sidebar from \"../components/Sidebar\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getUserProfile } from \"../redux/actions/profileActions\";\r\nimport { GET_PROFILE_RESET } from \"../redux/types\";\r\nimport {\r\n  listUserPosts,\r\n  listUserReplies,\r\n  listUserPinnedPost,\r\n} from \"../redux/actions/postActions\";\r\nimport { toggleUserFollow } from \"../redux/actions/userActions\";\r\nimport Loader from \"../components/Loader\";\r\nimport Tabs from \"../components/Tabs\";\r\nimport FollowButton from \"../components/FollowButton\";\r\nimport ImageUploadModal from \"../components/ImageUploadModal\";\r\nimport \"./ProfileScreen.css\";\r\nconst ProfileScreen = ({ match }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const username = match.params.username;\r\n  const { userInfo } = useSelector((state) => state.userLogin);\r\n  const { loading, profile, errors } = useSelector((state) => state.profile);\r\n\r\n  useEffect(async () => {\r\n    dispatch({ type: GET_PROFILE_RESET });\r\n    if (!username) {\r\n      await dispatch(getUserProfile(userInfo.user.username));\r\n    } else {\r\n      await dispatch(getUserProfile(username));\r\n    }\r\n\r\n    dispatch(listUserPosts());\r\n    dispatch(listUserPinnedPost());\r\n    dispatch(listUserReplies());\r\n  }, [dispatch, username]);\r\n\r\n  const handleFollow = () => {\r\n    dispatch(toggleUserFollow(profile._id));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"wrapper\">\r\n        <Row>\r\n          <Col xs={2}>\r\n            <nav>\r\n              <Sidebar />\r\n            </nav>\r\n          </Col>\r\n          <Col xs={10} md={8} lg={6} className=\"mainSectionContainer\">\r\n            <div className=\"titleContainer\">\r\n              <h1>User Profile Page</h1>\r\n            </div>\r\n            {loading || !profile ? (\r\n              <Loader />\r\n            ) : (\r\n              <div className=\"profileHeaderContainer\">\r\n                <div className=\"coverPhotoSection\">\r\n                  <div className=\"coverPhotoContainer\">\r\n                    {profile.coverPic && <img src={profile.coverPic} />}\r\n                    {profile._id === userInfo.user._id && (\r\n                      <ImageUploadModal cover />\r\n                    )}\r\n                  </div>\r\n                  <div className=\"profileImageContainer\">\r\n                    <img\r\n                      src={profile.profilePic}\r\n                      alt=\"User's Profile Picture\"\r\n                    />\r\n                    {profile._id === userInfo.user._id && <ImageUploadModal />}\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"profileButtonsContainer\">\r\n                  {profile._id !== userInfo.user._id ? (\r\n                    <>\r\n                      <Link\r\n                        to={`/messages/${profile._id}`}\r\n                        className=\"profileButton\"\r\n                      >\r\n                        <FaEnvelope />\r\n                      </Link>\r\n                      {/* Follow Button */}\r\n                      <FollowButton\r\n                        userInfo={userInfo}\r\n                        profile={profile}\r\n                        clickHandler={handleFollow}\r\n                      />\r\n                    </>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </div>\r\n                <div className=\"userDetailsContainer\">\r\n                  <span className=\"displayName\">\r\n                    {profile.firstName} {profile.lastName}\r\n                  </span>\r\n                  <span className=\"username\">@{profile.username}</span>\r\n                  <span className=\"description\">{profile.description}</span>\r\n                  <div className=\"followersContainer\">\r\n                    <Link to={`/profile/${profile.username}/following`}>\r\n                      <span className=\"value\">{profile.following.length}</span>\r\n                      <span> Following</span>\r\n                    </Link>\r\n                    <Link to={`/profile/${profile.username}/followers`}>\r\n                      <span className=\"value\">{profile.followers.length}</span>\r\n                      <span> Followers</span>\r\n                    </Link>\r\n                  </div>\r\n                </div>\r\n                <Tabs userProfile />\r\n              </div>\r\n            )}\r\n          </Col>\r\n          <Col className=\"d-none d-md-block col-md-2 col-lg-4\"></Col>\r\n        </Row>\r\n      </div>\r\n      )\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProfileScreen;\r\n","C:\\Users\\Abdelrahman\\Desktop\\twitter react\\frontend\\src\\redux\\reducers\\profileReducers.js",[],"C:\\Users\\Abdelrahman\\Desktop\\twitter react\\frontend\\src\\redux\\actions\\profileActions.js",["211"],"import axios from \"axios\";\r\nimport {\r\n  GET_PROFILE_FAIL,\r\n  GET_PROFILE_REQUEST,\r\n  GET_PROFILE_SUCCESS,\r\n  GET_USER_FOLLOWING_REQUEST,\r\n  GET_USER_FOLLOWING_SUCCESS,\r\n  GET_USER_FOLLOWING_FAIL,\r\n  GET_USER_FOLLOWERS_FAIL,\r\n  GET_USER_FOLLOWERS_SUCCESS,\r\n  GET_USER_FOLLOWERS_REQUEST,\r\n} from \"../types\";\r\n\r\nexport const getUserProfile = (username) => async (dispatch, getState) => {\r\n  try {\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`/api/profile/${username}`, config);\r\n    dispatch({ type: GET_PROFILE_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({ type: GET_PROFILE_FAIL, payload: error.response.data.message });\r\n  }\r\n};\r\n\r\nexport const getUserFollowers = (id) => async (dispatch, getState) => {\r\n  try {\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n    dispatch({ type: GET_USER_FOLLOWERS_REQUEST });\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`/api/users/${id}/followers`, config);\r\n    dispatch({ type: GET_USER_FOLLOWERS_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: GET_USER_FOLLOWERS_FAIL,\r\n      payload: error.response.data.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getUserFollowing = (id) => async (dispatch, getState) => {\r\n  try {\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n    dispatch({ type: GET_USER_FOLLOWING_REQUEST });\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`/api/users/${id}/following`, config);\r\n    dispatch({ type: GET_USER_FOLLOWING_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: GET_USER_FOLLOWING_FAIL,\r\n      payload: error.response.data.message,\r\n    });\r\n  }\r\n};\r\n","C:\\Users\\Abdelrahman\\Desktop\\twitter react\\frontend\\src\\components\\Loader.js",[],"C:\\Users\\Abdelrahman\\Desktop\\twitter react\\frontend\\src\\components\\Tabs.js",["212","213","214","215","216","217","218"],"import React, { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  getUserProfile,\r\n  getUserFollowers,\r\n  getUserFollowing,\r\n} from \"../redux/actions/profileActions\";\r\nimport { toggleSearchMode } from \"../redux/actions/postActions\";\r\nimport Loader from \"./Loader\";\r\nimport Post from \"./Post\";\r\nimport User from \"./User\";\r\n\r\nconst Tabs = ({ followingComp, username, profile, search, userProfile }) => {\r\n  const dispatch = useDispatch();\r\n  const tabState = followingComp ? \"followers\" : \"posts\";\r\n  const { loadingFollowing } = useSelector((state) => state.profile);\r\n  const { mode } = useSelector((state) => state.searchMode);\r\n\r\n  const [activeTab, setActiveTab] = useState(tabState);\r\n\r\n  const { posts, replies, pinnedPost } = useSelector((state) => state.post);\r\n\r\n  const handleFollowerClick = async () => {\r\n    dispatch(getUserFollowers(username));\r\n    setActiveTab(\"followers\");\r\n  };\r\n\r\n  const handleFollowingClick = async () => {\r\n    dispatch(getUserFollowing(username));\r\n    setActiveTab(\"following\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"tabsContainer\">\r\n        {followingComp ? (\r\n          <>\r\n            <div\r\n              onClick={handleFollowerClick}\r\n              className={activeTab == \"followers\" ? \"tab active\" : \"tab\"}\r\n            >\r\n              Followers\r\n            </div>\r\n            <div\r\n              onClick={handleFollowingClick}\r\n              className={activeTab == \"following\" ? \"tab active\" : \"tab\"}\r\n            >\r\n              Following\r\n            </div>\r\n          </>\r\n        ) : search ? (\r\n          <>\r\n            <div\r\n              onClick={() => dispatch(toggleSearchMode())}\r\n              className={mode == \"postsMode\" ? \"tab active\" : \"tab\"}\r\n            >\r\n              Posts\r\n            </div>\r\n            <div\r\n              onClick={() => dispatch(toggleSearchMode())}\r\n              className={mode == \"usersMode\" ? \"tab active\" : \"tab\"}\r\n            >\r\n              Users\r\n            </div>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <div\r\n              onClick={() => setActiveTab(\"posts\")}\r\n              className={activeTab == \"posts\" ? \"tab active\" : \"tab\"}\r\n            >\r\n              Posts\r\n            </div>\r\n            <div\r\n              onClick={() => setActiveTab(\"replies\")}\r\n              className={activeTab == \"replies\" ? \"tab active\" : \"tab\"}\r\n            >\r\n              Replies\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n      {followingComp ? (\r\n        <div className=\"followingContainer\">\r\n          {loadingFollowing ? (\r\n            <Loader />\r\n          ) : activeTab === \"followers\" ? (\r\n            profile.followers.map((profile) => (\r\n              <User key={profile._id} profile={profile} />\r\n            ))\r\n          ) : loadingFollowing ? (\r\n            <Loader />\r\n          ) : (\r\n            activeTab === \"following\" &&\r\n            profile.following.map((profile) => (\r\n              <User key={profile._id} profile={profile} showFollow />\r\n            ))\r\n          )}\r\n        </div>\r\n      ) : (\r\n        <>\r\n          {pinnedPost.length === 0\r\n            ? null\r\n            : activeTab === \"posts\" && (\r\n                <div className=\"pinnedPostContainer\">\r\n                  {pinnedPost.map((post) => (\r\n                    <Post key={post._id} post={post} pinned />\r\n                  ))}\r\n                </div>\r\n              )}\r\n          {userProfile && (\r\n            <div className=\"postsContainer\">\r\n              {activeTab === \"posts\" &&\r\n                mode !== null &&\r\n                posts.map((post) => <Post key={post._id} post={post} />)}\r\n              {activeTab === \"replies\" &&\r\n                replies.map((post) => <Post key={post._id} post={post} />)}\r\n            </div>\r\n          )}\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Tabs;\r\n","C:\\Users\\Abdelrahman\\Desktop\\twitter react\\frontend\\src\\components\\FollowButton.js",[],"C:\\Users\\Abdelrahman\\Desktop\\twitter react\\frontend\\src\\screens\\FollowingScreen.js",["219","220","221"],"import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getUserFollowers } from \"../redux/actions/profileActions\";\r\nimport { Col, Row } from \"react-bootstrap\";\r\nimport Tabs from \"../components/Tabs\";\r\nimport Sidebar from \"../components/Sidebar\";\r\nimport Loader from \"../components/Loader\";\r\nimport \"./FollowingScreen.css\";\r\nconst FollowingScreen = ({ match }) => {\r\n  const username = match.params.userId;\r\n  const { loading, following, followers, profile } = useSelector(\r\n    (state) => state.profile\r\n  );\r\n\r\n  const dispatch = useDispatch();\r\n  useEffect(async () => {\r\n    dispatch(getUserFollowers(username));\r\n  }, [dispatch, username]);\r\n\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <Row>\r\n        <Col xs={2}>\r\n          <nav>\r\n            <Sidebar />\r\n          </nav>\r\n        </Col>\r\n        <Col xs={10} md={8} lg={6} className=\"mainSectionContainer\">\r\n          <div className=\"titleContainer\">\r\n            <h1>Following and Followers</h1>\r\n          </div>\r\n          {loading || !profile ? (\r\n            <Loader />\r\n          ) : (\r\n            <Tabs followingComp username={username} profile={profile} />\r\n          )}\r\n        </Col>\r\n        <Col className=\"d-none d-md-block col-md-2 col-lg-4\"></Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FollowingScreen;\r\n","C:\\Users\\Abdelrahman\\Desktop\\twitter react\\frontend\\src\\components\\User.js",["222"],"import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport FollowButton from \"./FollowButton\";\r\nimport { toggleUserFollow } from \"../redux/actions/userActions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nconst User = ({ profile, showFollow, clickHandler }) => {\r\n  const dispatch = useDispatch();\r\n  const { userInfo } = useSelector((state) => state.userLogin);\r\n\r\n  const handleFollow = () => {\r\n    dispatch(toggleUserFollow(profile._id));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"user\" onClick={clickHandler}>\r\n        <div className=\"userImageContainer\">\r\n          <img src={profile.profilePic} alt=\"User Image\" />\r\n        </div>\r\n        <div className=\"userDetailsContainer\">\r\n          <div className=\"header\">\r\n            <Link to={`/profile/${profile.username}`}>\r\n              {`${profile.firstName} ${profile.lastName}`}\r\n            </Link>\r\n            <span className=\"username\">@{profile.username}</span>\r\n          </div>\r\n        </div>\r\n        {profile._id !== userInfo.user._id && showFollow && (\r\n          <FollowButton\r\n            clickHandler={handleFollow}\r\n            userInfo={userInfo}\r\n            profile={profile}\r\n          />\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default User;\r\n","C:\\Users\\Abdelrahman\\Desktop\\twitter react\\frontend\\src\\components\\ImageUploadModal.js",["223"],"import React, { useState } from \"react\";\r\nimport { Button, Modal } from \"react-bootstrap\";\r\nimport { FaCamera } from \"react-icons/fa\";\r\nimport Cropper from \"cropperjs\";\r\nimport { useSelector } from \"react-redux\";\r\nimport axios from \"axios\";\r\nconst ImageUploadModal = ({ cover }) => {\r\n  let cropper;\r\n  let image;\r\n  const [show, setShow] = useState(false);\r\n  const { userInfo } = useSelector((state) => state.userLogin);\r\n\r\n  let aspectRatio = cover ? 16 / 9 : 1 / 1;\r\n\r\n  const handleShow = () => setShow(true);\r\n\r\n  const handleImagePreview = (e) => {\r\n    if (e.target.files && e.target.files[0]) {\r\n      let reader = new FileReader();\r\n      reader.onload = (e) => {\r\n        if (cover) {\r\n          image = document.getElementById(\"coverPreview\");\r\n        } else {\r\n          image = document.getElementById(\"imagePreview\");\r\n        }\r\n        image.src = e.target.result;\r\n\r\n        cropper = new Cropper(image, {\r\n          aspectRatio,\r\n          background: false,\r\n        });\r\n      };\r\n      reader.readAsDataURL(e.target.files[0]);\r\n    }\r\n  };\r\n\r\n  const profilePhotoHandler = () => {\r\n    let canvas = cropper.getCroppedCanvas();\r\n    canvas.toBlob(async (blob) => {\r\n      const formData = new FormData();\r\n      formData.append(\"croppedImage\", blob);\r\n      try {\r\n        const config = {\r\n          headers: {\r\n            \"Content-Type\": \"multipart/form-data\",\r\n            Authorization: `Bearer ${userInfo.token}`,\r\n          },\r\n        };\r\n\r\n        const { data } = await axios.post(\r\n          `/api/uploads/${cover ? \"coverPicture\" : \"profilePicture\"}`,\r\n          formData,\r\n          config\r\n        );\r\n        const userInfoFromLocal = JSON.parse(localStorage.getItem(\"userInfo\"));\r\n        if (cover) {\r\n          userInfoFromLocal.user.coverPic = data;\r\n        } else {\r\n          userInfoFromLocal.user.profilPic = data;\r\n        }\r\n        localStorage.setItem(\"userInfo\", JSON.stringify(userInfoFromLocal));\r\n        setShow(false);\r\n        window.location.reload();\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setShow(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <FaCamera\r\n        className={cover ? \"coverPhotoButton\" : \"profilePictureButton\"}\r\n        onClick={handleShow}\r\n      />\r\n\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>\r\n            {cover\r\n              ? \"Upload a new cover photo\"\r\n              : \"Upload a New Profile Picture\"}\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          {cover ? (\r\n            <>\r\n              <input\r\n                type=\"file\"\r\n                name=\"filePhoto\"\r\n                onChange={handleImagePreview}\r\n              />\r\n              <div className=\"coverPreviewContainer\">\r\n                <img className=\"coverPreview\" id=\"coverPreview\" />\r\n              </div>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <input\r\n                type=\"file\"\r\n                name=\"filePhoto\"\r\n                onChange={handleImagePreview}\r\n              />\r\n              <div className=\"imgPreviewContainer\">\r\n                <img alt=\"\" className=\"imagePreview\" id=\"imagePreview\" />\r\n              </div>\r\n            </>\r\n          )}\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={profilePhotoHandler}>\r\n            Save\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ImageUploadModal;\r\n","C:\\Users\\Abdelrahman\\Desktop\\twitter react\\frontend\\src\\screens\\SearchScreen.js",["224","225","226"],"import React, { useEffect } from \"react\";\r\nimport Sidebar from \"../components/Sidebar\";\r\nimport { Col, Row } from \"react-bootstrap\";\r\nimport Tabs from \"../components/Tabs\";\r\nimport { FaSearch } from \"react-icons/fa\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { listPosts } from \"../redux/actions/postActions\";\r\nimport { getUsers } from \"../redux/actions/userActions\";\r\nimport { GET_POSTS_RESET } from \"../redux/types\";\r\nimport Post from \"../components/Post\";\r\nimport User from \"../components/User\";\r\nimport \"./ProfileScreen.css\";\r\nimport Loader from \"../components/Loader\";\r\nconst SearchScreen = () => {\r\n  const { mode } = useSelector((state) => state.searchMode);\r\n  const { users, loading } = useSelector((state) => state.searchUsers);\r\n  const { posts } = useSelector((state) => state.post);\r\n\r\n  let timer;\r\n  const dispatch = useDispatch();\r\n  const handleChange = (e) => {\r\n    clearTimeout(timer);\r\n    let value = e.target.value;\r\n\r\n    timer = setTimeout(() => {\r\n      value = e.target.value.trim();\r\n      if (value == \"\") {\r\n        return;\r\n      } else {\r\n        if (mode === \"postsMode\") {\r\n          dispatch(listPosts(value));\r\n        } else {\r\n          dispatch(getUsers(value));\r\n        }\r\n      }\r\n    }, 1000);\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch({ type: GET_POSTS_RESET });\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"wrapper\">\r\n        <Row>\r\n          <Col xs={2}>\r\n            <nav>\r\n              <Sidebar />\r\n            </nav>\r\n          </Col>\r\n          <Col xs={10} md={8} lg={6} className=\"mainSectionContainer\">\r\n            <div className=\"titleContainer\">\r\n              <h1>Search</h1>\r\n            </div>\r\n            <div className=\"searchBarContainer\">\r\n              <FaSearch />\r\n              <input type=\"text\" name=\"searchBox\" onKeyDown={handleChange} />\r\n            </div>\r\n            <Tabs search />\r\n            <div className=\"resultsContainer followingContainer\">\r\n              {mode === \"postsMode\" &&\r\n                posts.map((post) => <Post key={post._id} post={post} />)}\r\n              {!users ||\r\n                (mode === \"usersMode\" &&\r\n                  users.map((profile) => (\r\n                    <User key={profile._id} profile={profile} />\r\n                  )))}\r\n            </div>\r\n          </Col>\r\n          <Col className=\"d-none d-md-block col-md-2 col-lg-4\"></Col>\r\n        </Row>\r\n      </div>\r\n      )\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SearchScreen;\r\n","C:\\Users\\Abdelrahman\\Desktop\\twitter react\\frontend\\src\\screens\\InboxScreen.js",["227"],"import React, { useEffect } from \"react\";\r\nimport Sidebar from \"../components/Sidebar\";\r\nimport { Col, Row } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Chat from \"../components/Chat\";\r\nimport { BiCommentAdd } from \"react-icons/bi\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getChats } from \"../redux/actions/chatActions\";\r\nimport { GET_CHAT_RESET } from \"../redux/types\";\r\nimport Loader from \"../components/Loader\";\r\nimport \"./ProfileScreen.css\";\r\nconst InboxScreen = () => {\r\n  const { chats, loading } = useSelector((state) => state.chats);\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(getChats());\r\n  }, [dispatch]);\r\n  return (\r\n    <>\r\n      <div className=\"wrapper\">\r\n        <Row>\r\n          <Col xs={2}>\r\n            <nav>\r\n              <Sidebar />\r\n            </nav>\r\n          </Col>\r\n          <Col xs={10} md={8} lg={6} className=\"mainSectionContainer\">\r\n            <div className=\"titleContainer\">\r\n              <h1>Inbox</h1>\r\n              <Link to=\"/messages/new\">\r\n                <BiCommentAdd />\r\n              </Link>\r\n            </div>\r\n            {loading || !chats ? (\r\n              <Loader />\r\n            ) : (\r\n              <div className=\"resultsContainer\">\r\n                {chats.map((chat) => (\r\n                  <Chat key={chat._id} chat={chat} />\r\n                ))}\r\n              </div>\r\n            )}\r\n          </Col>\r\n          <Col className=\"d-none d-md-block col-md-2 col-lg-4\"></Col>\r\n        </Row>\r\n      </div>\r\n      )\r\n    </>\r\n  );\r\n};\r\n\r\nexport default InboxScreen;\r\n","C:\\Users\\Abdelrahman\\Desktop\\twitter react\\frontend\\src\\screens\\MessageScreen.js",["228","229"],"import React, { useState, useEffect } from \"react\";\r\nimport Sidebar from \"../components/Sidebar\";\r\nimport { Col, Row } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getUsers } from \"../redux/actions/userActions\";\r\nimport User from \"../components/User\";\r\nimport { GET_SEARCH_USERS_RESET } from \"../redux/types\";\r\nimport { createGroupChat } from \"../redux/actions/chatActions\";\r\nimport \"./ProfileScreen.css\";\r\nconst MessagesScreen = ({ history }) => {\r\n  const [timer, setTimer] = useState(null);\r\n  const [selectedUsers, setSelectedUsers] = useState([]);\r\n  let [value, setValue] = useState(\"\");\r\n  const { users } = useSelector((state) => state.searchUsers);\r\n  const { success, groupChat } = useSelector((state) => state.chat);\r\n  const { userInfo } = useSelector((state) => state.userLogin);\r\n  const dispatch = useDispatch();\r\n  const handleChange = (e) => {\r\n    clearTimeout(timer);\r\n    if (value === \"\" && e.keyCode === 8) {\r\n      selectedUsers.pop();\r\n      dispatch({ type: GET_SEARCH_USERS_RESET });\r\n    }\r\n    setTimer(\r\n      setTimeout(() => {\r\n        value = e.target.value;\r\n        if (value === \"\") {\r\n          dispatch({ type: GET_SEARCH_USERS_RESET });\r\n        } else {\r\n          dispatch(getUsers(value));\r\n        }\r\n      }, 1000)\r\n    );\r\n  };\r\n\r\n  const handleUserClick = (user) => {\r\n    setValue(\"\");\r\n    setSelectedUsers((prevState) => [...prevState, user]);\r\n    dispatch({ type: GET_SEARCH_USERS_RESET });\r\n  };\r\n\r\n  const handleButtonClick = () => {\r\n    dispatch(createGroupChat(selectedUsers));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (success) {\r\n      history.push(`/messages/${groupChat._id}`);\r\n    }\r\n  }, [success, history]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"wrapper\">\r\n        <Row>\r\n          <Col xs={2}>\r\n            <nav>\r\n              <Sidebar />\r\n            </nav>\r\n          </Col>\r\n          <Col xs={10} md={8} lg={6} className=\"mainSectionContainer\">\r\n            <div className=\"titleContainer\">\r\n              <h1>Messages</h1>\r\n            </div>\r\n            <div className=\"chatPageContainer\">\r\n              <div className=\"chatTitleBar\">\r\n                <label htmlFor=\"userSearchTextbox\">To:</label>\r\n                <div className=\"selectedUsers\">\r\n                  {selectedUsers.map((user) => {\r\n                    const name = `${user.firstName} ${user.lastName}`;\r\n                    return <span className=\"selectedUser\">{name}</span>;\r\n                  })}\r\n                  <input\r\n                    type=\"text\"\r\n                    id=\"userSearchTextbox\"\r\n                    onChange={(e) => setValue(e.target.value)}\r\n                    onKeyDown={handleChange}\r\n                    placeholder=\"Type the name of the person\"\r\n                    autoComplete=\"off\"\r\n                    value={value}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"resultsContainer\">\r\n                {users &&\r\n                  value &&\r\n                  users.map((user) => {\r\n                    if (\r\n                      user._id === userInfo.user._id ||\r\n                      selectedUsers.some((u) => user._id === u._id)\r\n                    ) {\r\n                      return;\r\n                    }\r\n                    return (\r\n                      <User\r\n                        key={user._id}\r\n                        profile={user}\r\n                        clickHandler={handleUserClick.bind(this, user)}\r\n                      />\r\n                    );\r\n                  })}\r\n              </div>\r\n              <button\r\n                disabled={selectedUsers.length === 0}\r\n                className=\"createChatButton\"\r\n                onClick={handleButtonClick}\r\n              >\r\n                Create chat\r\n              </button>\r\n            </div>\r\n          </Col>\r\n          <Col className=\"d-none d-md-block col-md-2 col-lg-4\"></Col>\r\n        </Row>\r\n      </div>\r\n      )\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MessagesScreen;\r\n","C:\\Users\\Abdelrahman\\Desktop\\twitter react\\frontend\\src\\redux\\actions\\chatActions.js",["230"],"import axios from \"axios\";\r\nimport {\r\n  CREATE_GROUP_CHAT_FAIL,\r\n  CREATE_GROUP_CHAT_SUCCESS,\r\n  GET_CHATS_REQUEST,\r\n  GET_CHATS_SUCCESS,\r\n  GET_CHATS_FAIL,\r\n  GET_CHAT_REQUEST,\r\n  GET_CHAT_SUCCESS,\r\n  GET_CHAT_FAIL,\r\n  GET_CHAT_RESET,\r\n  UPDATE_CHATNAME_SUCCESS,\r\n  UPDATE_CHATNAME_FAIL,\r\n} from \"../types\";\r\n\r\nexport const createGroupChat = (users) => async (dispatch, getState) => {\r\n  try {\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n    let jsonUsers = JSON.stringify(users);\r\n    const { data } = await axios.post(\r\n      \"/api/chat\",\r\n      { users: jsonUsers },\r\n      config\r\n    );\r\n    dispatch({ type: CREATE_GROUP_CHAT_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: CREATE_GROUP_CHAT_FAIL,\r\n      payload: error.response.data.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getChats = () => async (dispatch, getState) => {\r\n  try {\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n    dispatch({ type: GET_CHATS_REQUEST });\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(\"/api/chat\", config);\r\n    dispatch({ type: GET_CHATS_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: GET_CHATS_FAIL,\r\n      payload: error.response.data.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getChat = (id) => async (dispatch, getState) => {\r\n  try {\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n    dispatch({ type: GET_CHAT_REQUEST });\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`/api/chat/${id}`, config);\r\n    dispatch({\r\n      type: GET_CHAT_SUCCESS,\r\n      payload: { chat: data, users: data.users },\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: GET_CHAT_FAIL,\r\n      payload: error.response.data.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateChatName = (id, name) => async (dispatch, getState) => {\r\n  try {\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.put(\r\n      `/api/chat/${id}`,\r\n      { chatName: name },\r\n      config\r\n    );\r\n    console.log(data);\r\n    dispatch({ type: UPDATE_CHATNAME_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: UPDATE_CHATNAME_FAIL,\r\n      payload: error.response.data.message,\r\n    });\r\n  }\r\n};\r\n","C:\\Users\\Abdelrahman\\Desktop\\twitter react\\frontend\\src\\redux\\reducers\\chatReducer.js",[],"C:\\Users\\Abdelrahman\\Desktop\\twitter react\\frontend\\src\\components\\Chat.js",["231"],"import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getChatName } from \"../utils/getChatName\";\r\nconst Chat = ({ chat }) => {\r\n  const { userInfo } = useSelector((state) => state.userLogin);\r\n  const latestMessage = chat.latestMessage;\r\n  const users =\r\n    chat.users.length == 1\r\n      ? chat.users\r\n      : chat.users.filter((user) => user._id !== userInfo.user._id);\r\n\r\n  const groupChatClass = users.length > 1 ? \"groupChat\" : \"\";\r\n\r\n  const getChatImage = (users) => {\r\n    let chatImages = [];\r\n    chatImages.push(users[0].profilePic);\r\n    if (users.length > 1) {\r\n      chatImages.push(users[1].profilePic);\r\n    }\r\n\r\n    return chatImages.map((image, index) => (\r\n      <img key={index} src={image} alt=\"\" />\r\n    ));\r\n  };\r\n  return (\r\n    <Link to={`/messages/${chat._id}`} className=\"resultListItem\">\r\n      <div className={`resultImageContainer ${groupChatClass}`}>\r\n        {getChatImage(users)}\r\n      </div>\r\n      <div className=\"resultsDetailsContainer ellipsis\">\r\n        <span className=\"heading ellipsis\">\r\n          {getChatName(chat.chatName, users)}\r\n        </span>\r\n        <span className=\"subtext ellipsis\">\r\n          {latestMessage\r\n            ? `${latestMessage.sender.firstName} ${latestMessage.sender.lastName}: ${latestMessage.content}`\r\n            : \"New Chat\"}\r\n        </span>\r\n      </div>\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default Chat;\r\n","C:\\Users\\Abdelrahman\\Desktop\\twitter react\\frontend\\src\\screens\\ChatScreen.js",["232","233"],"import React, { useEffect, useState } from \"react\";\r\nimport { Col, Row } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Sidebar from \"../components/Sidebar\";\r\nimport { getChat } from \"../redux/actions/chatActions\";\r\nimport { createMessage, getMessages } from \"../redux/actions/messagesActions\";\r\nimport Loader from \"../components/Loader\";\r\nimport Modal from \"../components/Modal\";\r\nimport Messages from \"../components/Messages\";\r\nimport { getChatName } from \"../utils/getChatName\";\r\nimport TextInput from \"../components/TextInput\";\r\nconst ChatScreen = ({ match }) => {\r\n  const chatId = match.params.id;\r\n  const { chat, loadingChat: loading } = useSelector((state) => state.chats);\r\n  const { userInfo } = useSelector((state) => state.userLogin);\r\n  const { messages, loading: loadingMessage } = useSelector(\r\n    (state) => state.message\r\n  );\r\n  const [container, setContainer] = useState(null);\r\n\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const maxUsers = 2;\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(async () => {\r\n    await dispatch(getChat(chatId));\r\n    await dispatch(getMessages(chatId));\r\n    setContainer(document.getElementsByClassName(\"chatMessages\")[0]);\r\n  }, [dispatch, chatId]);\r\n\r\n  useEffect(() => {\r\n    if (container) {\r\n      container.scrollTop = container.scrollHeight;\r\n    }\r\n  }, [container]);\r\n\r\n  let remainingUsers = !loading && chat.users.length - maxUsers;\r\n  remainingUsers--;\r\n  const otherUsers =\r\n    !loading && chat.users.filter((user) => user._id !== userInfo.user._id);\r\n  const chatName = !loading && getChatName(chat.chatName, otherUsers);\r\n\r\n  const sendMessage = async (e) => {\r\n    await dispatch(createMessage(message, chatId));\r\n  };\r\n\r\n  const messageHandler = async (e) => {\r\n    sendMessage();\r\n    setMessage(\"\");\r\n  };\r\n\r\n  const keyHandler = async (e) => {\r\n    if (e.keyCode === 13 && !e.shiftKey) {\r\n      e.preventDefault();\r\n      await sendMessage();\r\n      container.scrollTo({ top: container.scrollHeight, behavior: \"smooth\" });\r\n      setMessage(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"wrapper\">\r\n        <Row>\r\n          <Col xs={2}>\r\n            <nav>\r\n              <Sidebar />\r\n            </nav>\r\n          </Col>\r\n          <Col xs={10} md={8} lg={6} className=\"mainSectionContainer\">\r\n            <div className=\"titleContainer\">\r\n              <h1>Chat</h1>\r\n            </div>\r\n            {loading ? (\r\n              <Loader />\r\n            ) : (\r\n              <div className=\"chatPageContainer\">\r\n                <div className=\"chatTitleBarContainer\">\r\n                  <div className=\"chatImagesContainer\">\r\n                    {remainingUsers > 0 && (\r\n                      <div className=\"userCount\">+{remainingUsers}</div>\r\n                    )}\r\n                    {otherUsers.map((user) => {\r\n                      if (user._id === userInfo.user._id) return;\r\n                      return (\r\n                        <img key={user._id} src={user.profilePic} alt=\"\" />\r\n                      );\r\n                    })}\r\n                  </div>\r\n                  <Modal inbox chatName={chatName} />\r\n                </div>\r\n                <div className=\"mainContentContainer\">\r\n                  <div className=\"chatContainer\">\r\n                    <ul className=\"chatMessages\">\r\n                      {loadingMessage ? (\r\n                        <Loader />\r\n                      ) : (\r\n                        <>\r\n                          {messages.map((message, index) => {\r\n                            const nextMessage = messages[index + 1];\r\n\r\n                            return (\r\n                              <Messages\r\n                                key={message._id}\r\n                                message={message}\r\n                                nextMessage={nextMessage}\r\n                              />\r\n                            );\r\n                          })}\r\n                        </>\r\n                      )}\r\n                    </ul>\r\n                    <div className=\"chatFooter\">\r\n                      <TextInput\r\n                        changeHandler={(e) => setMessage(e.target.value)}\r\n                        message={message}\r\n                        keyHandler={keyHandler}\r\n                        messageHandler={messageHandler}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </Col>\r\n          <Col className=\"d-none d-md-block col-md-2 col-lg-4\"></Col>\r\n        </Row>\r\n      </div>\r\n      )\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ChatScreen;\r\n","C:\\Users\\Abdelrahman\\Desktop\\twitter react\\frontend\\src\\utils\\getChatName.js",[],"C:\\Users\\Abdelrahman\\Desktop\\twitter react\\frontend\\src\\redux\\actions\\messagesActions.js",[],"C:\\Users\\Abdelrahman\\Desktop\\twitter react\\frontend\\src\\redux\\reducers\\messagesReducer.js",[],"C:\\Users\\Abdelrahman\\Desktop\\twitter react\\frontend\\src\\components\\Messages.js",["234","235"],"import React, { useState, useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nconst Messages = ({ message, nextMessage, lastSenderId }) => {\r\n  const { userInfo } = useSelector((state) => state.userLogin);\r\n  const nextSenderId = nextMessage ? nextMessage.sender._id : \"\";\r\n  const sender = message.sender;\r\n  const senderName = `${sender.firstName} ${sender.lastName}`;\r\n  const isLast = nextSenderId !== message.sender._id;\r\n  const isMine = message.sender._id === userInfo.user._id;\r\n  return (\r\n    <li\r\n      className={`message ${isMine ? \"mine\" : \"theirs\"} ${\r\n        isLast ? \"last\" : \"\"\r\n      }`}\r\n    >\r\n      {!isMine && (\r\n        <div className=\"imageContainer\">\r\n          {isLast && <img src={sender.profilePic} alt=\"\" />}\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"messageContainer\">\r\n        {!isMine && <span className=\"senderName\">{senderName}</span>}\r\n        <span className=\"messageBody\">{message.content}</span>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default Messages;\r\n","C:\\Users\\Abdelrahman\\Desktop\\twitter react\\frontend\\src\\components\\TextInput.js",["236"],"import React, { useState } from \"react\";\r\nimport { FaPaperPlane } from \"react-icons/fa\";\r\n\r\nconst TextInput = ({ keyHandler, messageHandler, changeHandler, message }) => {\r\n  return (\r\n    <>\r\n      <textarea\r\n        name=\"textarea\"\r\n        placeholder=\"Type a message...\"\r\n        value={message}\r\n        onChange={changeHandler}\r\n        onKeyDown={keyHandler}\r\n      />\r\n      <button className=\"sendMessageBtn\" onClick={messageHandler}>\r\n        <FaPaperPlane />\r\n      </button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TextInput;\r\n",{"ruleId":"237","replacedBy":"238"},{"ruleId":"239","replacedBy":"240"},{"ruleId":null,"fatal":true,"severity":2,"message":"241"},{"ruleId":"242","severity":1,"message":"243","line":7,"column":21,"nodeType":"244","messageId":"245","endLine":7,"endColumn":33},{"ruleId":"242","severity":1,"message":"246","line":19,"column":11,"nodeType":"244","messageId":"245","endLine":19,"endColumn":19},{"ruleId":"242","severity":1,"message":"243","line":15,"column":21,"nodeType":"244","messageId":"245","endLine":15,"endColumn":33},{"ruleId":"242","severity":1,"message":"247","line":1,"column":17,"nodeType":"244","messageId":"245","endLine":1,"endColumn":26},{"ruleId":"242","severity":1,"message":"248","line":5,"column":10,"nodeType":"244","messageId":"245","endLine":5,"endColumn":21},{"ruleId":"242","severity":1,"message":"249","line":2,"column":10,"nodeType":"244","messageId":"245","endLine":2,"endColumn":14},{"ruleId":"242","severity":1,"message":"250","line":89,"column":18,"nodeType":"244","messageId":"245","endLine":89,"endColumn":25},{"ruleId":"242","severity":1,"message":"248","line":4,"column":23,"nodeType":"244","messageId":"245","endLine":4,"endColumn":34},{"ruleId":"242","severity":1,"message":"247","line":1,"column":17,"nodeType":"244","messageId":"245","endLine":1,"endColumn":26},{"ruleId":"242","severity":1,"message":"251","line":1,"column":28,"nodeType":"244","messageId":"245","endLine":1,"endColumn":36},{"ruleId":"242","severity":1,"message":"246","line":12,"column":11,"nodeType":"244","messageId":"245","endLine":12,"endColumn":19},{"ruleId":"242","severity":1,"message":"252","line":25,"column":29,"nodeType":"244","messageId":"245","endLine":25,"endColumn":35},{"ruleId":"253","severity":1,"message":"254","line":27,"column":13,"nodeType":"255","endLine":38,"endColumn":4},{"ruleId":"253","severity":1,"message":"256","line":38,"column":6,"nodeType":"257","endLine":38,"endColumn":26,"suggestions":"258"},{"ruleId":"259","severity":1,"message":"260","line":63,"column":42,"nodeType":"261","endLine":63,"endColumn":72},{"ruleId":"262","severity":1,"message":"263","line":69,"column":21,"nodeType":"261","endLine":72,"endColumn":23},{"ruleId":"242","severity":1,"message":"264","line":4,"column":3,"nodeType":"244","messageId":"245","endLine":4,"endColumn":22},{"ruleId":"242","severity":1,"message":"265","line":4,"column":3,"nodeType":"244","messageId":"245","endLine":4,"endColumn":17},{"ruleId":"266","severity":1,"message":"267","line":40,"column":36,"nodeType":"268","messageId":"269","endLine":40,"endColumn":38},{"ruleId":"266","severity":1,"message":"267","line":46,"column":36,"nodeType":"268","messageId":"269","endLine":46,"endColumn":38},{"ruleId":"266","severity":1,"message":"267","line":55,"column":31,"nodeType":"268","messageId":"269","endLine":55,"endColumn":33},{"ruleId":"266","severity":1,"message":"267","line":61,"column":31,"nodeType":"268","messageId":"269","endLine":61,"endColumn":33},{"ruleId":"266","severity":1,"message":"267","line":70,"column":36,"nodeType":"268","messageId":"269","endLine":70,"endColumn":38},{"ruleId":"266","severity":1,"message":"267","line":76,"column":36,"nodeType":"268","messageId":"269","endLine":76,"endColumn":38},{"ruleId":"242","severity":1,"message":"270","line":11,"column":20,"nodeType":"244","messageId":"245","endLine":11,"endColumn":29},{"ruleId":"242","severity":1,"message":"271","line":11,"column":31,"nodeType":"244","messageId":"245","endLine":11,"endColumn":40},{"ruleId":"253","severity":1,"message":"254","line":16,"column":13,"nodeType":"255","endLine":18,"endColumn":4},{"ruleId":"262","severity":1,"message":"263","line":18,"column":11,"nodeType":"261","endLine":18,"endColumn":60},{"ruleId":"259","severity":1,"message":"260","line":98,"column":17,"nodeType":"261","endLine":98,"endColumn":67},{"ruleId":"242","severity":1,"message":"272","line":13,"column":8,"nodeType":"244","messageId":"245","endLine":13,"endColumn":14},{"ruleId":"242","severity":1,"message":"273","line":16,"column":18,"nodeType":"244","messageId":"245","endLine":16,"endColumn":25},{"ruleId":"266","severity":1,"message":"267","line":27,"column":17,"nodeType":"268","messageId":"269","endLine":27,"endColumn":19},{"ruleId":"242","severity":1,"message":"274","line":9,"column":10,"nodeType":"244","messageId":"245","endLine":9,"endColumn":24},{"ruleId":"253","severity":1,"message":"275","line":50,"column":6,"nodeType":"257","endLine":50,"endColumn":24,"suggestions":"276"},{"ruleId":"277","severity":1,"message":"278","line":92,"column":23,"nodeType":"279","messageId":"280","endLine":92,"endColumn":30},{"ruleId":"242","severity":1,"message":"274","line":11,"column":3,"nodeType":"244","messageId":"245","endLine":11,"endColumn":17},{"ruleId":"266","severity":1,"message":"267","line":9,"column":23,"nodeType":"268","messageId":"269","endLine":9,"endColumn":25},{"ruleId":"253","severity":1,"message":"254","line":26,"column":13,"nodeType":"255","endLine":30,"endColumn":4},{"ruleId":"277","severity":1,"message":"278","line":85,"column":59,"nodeType":"279","messageId":"280","endLine":85,"endColumn":66},{"ruleId":"242","severity":1,"message":"251","line":1,"column":17,"nodeType":"244","messageId":"245","endLine":1,"endColumn":25},{"ruleId":"242","severity":1,"message":"247","line":1,"column":27,"nodeType":"244","messageId":"245","endLine":1,"endColumn":36},{"ruleId":"242","severity":1,"message":"251","line":1,"column":17,"nodeType":"244","messageId":"245","endLine":1,"endColumn":25},"no-native-reassign",["281"],"no-negated-in-lhs",["282"],"Parsing error: Cannot find module './parse-with-scope'\nRequire stack:\n- C:\\Users\\Abdelrahman\\Desktop\\twitter react\\frontend\\node_modules\\babel-eslint\\lib\\index.js\n- C:\\Users\\Abdelrahman\\Desktop\\twitter react\\frontend\\node_modules\\@eslint\\eslintrc\\lib\\config-array-factory.js\n- C:\\Users\\Abdelrahman\\Desktop\\twitter react\\frontend\\node_modules\\@eslint\\eslintrc\\lib\\index.js\n- C:\\Users\\Abdelrahman\\Desktop\\twitter react\\frontend\\node_modules\\eslint\\lib\\cli-engine\\cli-engine.js\n- C:\\Users\\Abdelrahman\\Desktop\\twitter react\\frontend\\node_modules\\eslint\\lib\\cli-engine\\index.js\n- C:\\Users\\Abdelrahman\\Desktop\\twitter react\\frontend\\node_modules\\eslint\\lib\\api.js\n- C:\\Users\\Abdelrahman\\Desktop\\twitter react\\frontend\\node_modules\\eslint-webpack-plugin\\dist\\getESLint.js\n- C:\\Users\\Abdelrahman\\Desktop\\twitter react\\frontend\\node_modules\\eslint-webpack-plugin\\dist\\linter.js\n- C:\\Users\\Abdelrahman\\Desktop\\twitter react\\frontend\\node_modules\\eslint-webpack-plugin\\dist\\index.js\n- C:\\Users\\Abdelrahman\\Desktop\\twitter react\\frontend\\node_modules\\eslint-webpack-plugin\\dist\\cjs.js\n- C:\\Users\\Abdelrahman\\Desktop\\twitter react\\frontend\\node_modules\\react-scripts\\config\\webpack.config.js\n- C:\\Users\\Abdelrahman\\Desktop\\twitter react\\frontend\\node_modules\\react-scripts\\scripts\\start.js","no-unused-vars","'setStylePath' is assigned a value but never used.","Identifier","unusedVar","'userInfo' is assigned a value but never used.","'useEffect' is defined but never used.","'useSelector' is defined but never used.","'json' is defined but never used.","'profile' is assigned a value but never used.","'useState' is defined but never used.","'errors' is assigned a value but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'userInfo.user.username'. Either include it or remove the dependency array.","ArrayExpression",["283"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'GET_PROFILE_REQUEST' is defined but never used.","'getUserProfile' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'following' is assigned a value but never used.","'followers' is assigned a value but never used.","'Loader' is defined but never used.","'loading' is assigned a value but never used.","'GET_CHAT_RESET' is defined but never used.","React Hook useEffect has a missing dependency: 'groupChat._id'. Either include it or remove the dependency array.",["284"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ReturnStatement","expectedReturnValue","no-global-assign","no-unsafe-negation",{"desc":"285","fix":"286"},{"desc":"287","fix":"288"},"Update the dependencies array to be: [dispatch, userInfo.user.username, username]",{"range":"289","text":"290"},"Update the dependencies array to be: [success, history, groupChat._id]",{"range":"291","text":"292"},[1413,1433],"[dispatch, userInfo.user.username, username]",[1692,1710],"[success, history, groupChat._id]"]